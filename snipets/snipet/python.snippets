snippet #ini "initialize"
    #!/usr/bin/env python
	# -*- coding: utf-8 -*-
endsnippet

snippet from
from ${1:package} import ${2:module}
$0
endsnippet

snippet docs
'''
File: ${1:`Filename('$1.py', 'foo.py')`}
Author: ${2:`g:snips_author`}
Description: ${3}
'''

$0
endsnippet

snippet while 
while ${1:condition}:
    ${2:# code...}

$0
endsnippet

snippet class
class ${1:ClassName}(${2:object}):
    """${3:docstring for $1}"""
    def __init__(self, ${4:arg}):
	${5:super($1, self).__init__()}
	self.$4 = $4
	${6}

$0
endsnippet

snippet def
def ${1:fname}(${3:params}):
    $4

$0
endsnippet

snippet if
if ${1:condition}:
    ${2}

$0
endsnippet

snippet ifel
if ${1:condition}:
    ${2}
else:
    ${3}

$0
endsnippet

snippet ifefel
if ${1:condition}:
    ${2}
elif ${3:condition}:
    ${4}
else:
    ${5}

$0
endsnippet

snippet for
for ${1:item} in ${2:items}:
    ${3}

$0
endsnippet

snippet forp
for ${1:item} in ${2:items}:
    print("${3}" % ($1)) 
$0
endsnippet

snippet print
print("${1}" % (${2:var})) 
endsnippet

snippet lambda
${1:var} = lambda ${2:vars} : ${3:action}
$0
endsnippet

snippet .
self.
$0
endsnippet

snippet try_Try/Except
try:
    ${1:pass}
except ${2:Exception}, ${3:e}:
    ${4:raise $3}

$0
endsnippet

snippet try_Try/Except/Else
try:
    ${1:pass}
except ${2:Exception}, ${3:e}:
    ${4:raise $3}
else:
    ${5:pass}

$0
endsnippet

snippet try_Try/Except/Finally
try:
    ${1:pass}
except ${2:Exception}, ${3:e}:
    ${4:raise $3}
finally:
    ${5:pass}

$0
endsnippet

snippet try_Try/Except/Else/Finally
try:
    ${1:pass}
except ${2:Exception}, ${3:e}:
    ${4:raise $3}
else:
    ${5:pass}
finally:
    ${6:pass}

$0
endsnippet

snippet "
"""
${1:doc}
"""
$0
endsnippet

snippet ros_publisher
	#!/usr/bin/env python
	# -*- coding: utf-8 -*-

	import rospy
	from std_msgs.msg import String


	def talker():
		pub = rospy.Publisher('${2:topic}', String, queue_size=100)
		rospy.init_node('${1:node_name}', anonymous=True)
		rate = rospy.Rate(10)
		while not rospy.is_shutdown():
			msg = 'message [%s]' % rospy.get_time()
			rospy.loginfo(msg)
			pub.publish(msg)
			rate.sleep()


	if __name__ == '__main__':
		try:
			talker()
		except rospy.ROSInterruptException:
			pass
endsnippet

snippet ros_subscriber
	#!/usr/bin/env python
	# -*- coding: utf-8 -*-

	import rospy
	from std_msgs.msg import String


	def listen_callback(data):
		rospy.loginfo(rospy.get_caller_id() + ' %s' % (data.data))


	def listener():
		rospy.init_node('listener', anonymous=True)
		rospy.Subscriber('chatter', String, listen_callback)
		rospy.spin()


	if __name__ == '__main__':
		listener()
endsnippet

snippet ros_client
	#!/usr/bin/env python
	# -*- coding: utf-8 -*-

	import sys
	import rospy
	from std_srvs.srv import SetBool


	def set_bool_command(b):
		rospy.wait_for_service('set_bool')
		try:
			set_bool = rospy.ServiceProxy('set_bool', SetBool)
			res = set_bool(b)
			return res.success, res.message
		except rospy.ServiceException as e:
			print('Service Call Failed: %s' % (e))


	def main():
		success, message = set_bool_command(True)
		print('%s, %s' % (success, message))


	if __name__ == '__main__':
		main()
endsnippet

snippet ros_server
	#!/usr/bin/env python
	# -*- coding: utf-8 -*-

	from std_srvs.srv import SetBool, SetBoolResponse
	import rospy


	def set_bool(req):
		return SetBoolResponse(req.data, 'success')


	def start_server():
		rospy.init_node('set_bool_server')
		rospy.Service('set_bool', SetBool, set_bool)
		print('Server Ready...')
		rospy.spin()


	if __name__ == '__main__':
		start_server()
endsnippet

